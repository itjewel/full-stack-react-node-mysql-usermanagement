{"version":3,"sources":["../../js/src/custom-tooltips.js","../../js/index.umd.js"],"names":["ClassName","customTooltips","context","chart","tooltip","tooltipEl","canvas","parentNode","querySelector","document","createElement","classList","add","table","style","margin","appendChild","getOrCreateTooltip","opacity","body","titleLines","title","bodyLines","map","b","lines","tableHead","forEach","tr","borderWidth","th","text","createTextNode","tableBody","i","colors","labelColors","span","background","backgroundColor","borderColor","marginRight","height","width","display","td","tableRoot","firstChild","remove","offsetLeft","positionX","offsetTop","positionY","left","caretX","top","caretY","font","options","bodyFont","string","padding"],"mappings":";;;;;uQAOA,MAAMA,EACK,kBADLA,EAEU,uBAFVA,EAGe,4BAHfA,EAIY,yBAJZA,EAKiB,oCCFR,CACbC,eDqBqBC,IAErB,MAAMC,MAAEA,EAAFC,QAASA,GAAYF,EACrBG,EApBmBF,CAAAA,IACzB,IAAIE,EAAYF,EAAMG,OAAOC,WAAWC,cAAc,OAEtD,IAAKH,EAAW,CACdA,EAAYI,SAASC,cAAc,OACnCL,EAAUM,UAAUC,IAAIZ,GAExB,MAAMa,EAAQJ,SAASC,cAAc,SACrCG,EAAMC,MAAMC,OAAS,MAErBV,EAAUW,YAAYH,GACtBV,EAAMG,OAAOC,WAAWS,YAAYX,GAGtC,OAAOA,GAMWY,CAAmBd,GAGrC,GAAwB,IAApBC,EAAQc,QAEV,YADAb,EAAUS,MAAMI,QAAU,GAK5B,GAAId,EAAQe,KAAM,CAChB,MAAMC,EAAahB,EAAQiB,OAAS,GAC9BC,EAAYlB,EAAQe,KAAKI,KAAIC,GAAKA,EAAEC,QAEpCC,EAAYjB,SAASC,cAAc,SACzCgB,EAAUf,UAAUC,IAAIZ,GAExBoB,EAAWO,SAAQN,IACjB,MAAMO,EAAKnB,SAASC,cAAc,MAClCkB,EAAGd,MAAMe,YAAc,EACvBD,EAAGjB,UAAUC,IAAIZ,GAEjB,MAAM8B,EAAKrB,SAASC,cAAc,MAClCoB,EAAGhB,MAAMe,YAAc,EACvB,MAAME,EAAOtB,SAASuB,eAAeX,GAErCS,EAAGd,YAAYe,GACfH,EAAGZ,YAAYc,GACfJ,EAAUV,YAAYY,MAGxB,MAAMK,EAAYxB,SAASC,cAAc,SACzCuB,EAAUtB,UAAUC,IAAIZ,GAExBsB,EAAUK,SAAQ,CAACR,EAAMe,KACvB,MAAMC,EAAS/B,EAAQgC,YAAYF,GAE7BG,EAAO5B,SAASC,cAAc,QACpC2B,EAAKvB,MAAMwB,WAAaH,EAAOI,gBAC/BF,EAAKvB,MAAM0B,YAAcL,EAAOK,YAChCH,EAAKvB,MAAMe,YAAc,MACzBQ,EAAKvB,MAAM2B,YAAc,OACzBJ,EAAKvB,MAAM4B,OAAS,OACpBL,EAAKvB,MAAM6B,MAAQ,OACnBN,EAAKvB,MAAM8B,QAAU,eAErB,MAAMhB,EAAKnB,SAASC,cAAc,MAClCkB,EAAGjB,UAAUC,IAAIZ,GAEjB,MAAM6C,EAAKpC,SAASC,cAAc,MAClCmC,EAAG/B,MAAMe,YAAc,EAEvB,MAAME,EAAOtB,SAASuB,eAAeb,GAErC0B,EAAG7B,YAAYqB,GACfQ,EAAG7B,YAAYe,GACfH,EAAGZ,YAAY6B,GACfZ,EAAUjB,YAAYY,MAGxB,MAAMkB,EAAYzC,EAAUG,cAAc,SAG1C,KAAOsC,EAAUC,YACfD,EAAUC,WAAWC,SAIvBF,EAAU9B,YAAYU,GACtBoB,EAAU9B,YAAYiB,GAGxB,MAAQgB,WAAYC,EAAWC,UAAWC,GAAcjD,EAAMG,OAG9DD,EAAUS,MAAMI,QAAU,EAC1Bb,EAAUS,MAAMuC,KAAOH,EAAY9C,EAAQkD,OAAS,KACpDjD,EAAUS,MAAMyC,IAAMH,EAAYhD,EAAQoD,OAAS,KACnDnD,EAAUS,MAAM2C,KAAOrD,EAAQsD,QAAQC,SAASC,OAChDvD,EAAUS,MAAM+C,QAAUzD,EAAQyD,QAAU,MAAQzD,EAAQyD,QAAU","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Custom Tooltips for Chart.js (v3.0.0): custom-tooltips.js\n * Licensed under MIT (https://coreui.io/plugins/chart.js)\n * --------------------------------------------------------------------------\n */\n\nconst ClassName = {\n  TOOLTIP: 'chartjs-tooltip',\n  TOOLTIP_BODY: 'chartjs-tooltip-body',\n  TOOLTIP_BODY_ITEM: 'chartjs-tooltip-body-item',\n  TOOLTIP_HEADER: 'chartjs-tooltip-header',\n  TOOLTIP_HEADER_ITEM: 'chartjs-tooltip-header-item'\n}\n\nconst getOrCreateTooltip = chart => {\n  let tooltipEl = chart.canvas.parentNode.querySelector('div')\n\n  if (!tooltipEl) {\n    tooltipEl = document.createElement('div')\n    tooltipEl.classList.add(ClassName.TOOLTIP)\n\n    const table = document.createElement('table')\n    table.style.margin = '0px'\n\n    tooltipEl.appendChild(table)\n    chart.canvas.parentNode.appendChild(tooltipEl)\n  }\n\n  return tooltipEl\n}\n\nconst customTooltips = context => {\n  // Tooltip Element\n  const { chart, tooltip } = context\n  const tooltipEl = getOrCreateTooltip(chart)\n\n  // Hide if no tooltip\n  if (tooltip.opacity === 0) {\n    tooltipEl.style.opacity = 0\n    return\n  }\n\n  // Set Text\n  if (tooltip.body) {\n    const titleLines = tooltip.title || []\n    const bodyLines = tooltip.body.map(b => b.lines)\n\n    const tableHead = document.createElement('thead')\n    tableHead.classList.add(ClassName.TOOLTIP_HEADER)\n\n    titleLines.forEach(title => {\n      const tr = document.createElement('tr')\n      tr.style.borderWidth = 0\n      tr.classList.add(ClassName.TOOLTIP_HEADER_ITEM)\n\n      const th = document.createElement('th')\n      th.style.borderWidth = 0\n      const text = document.createTextNode(title)\n\n      th.appendChild(text)\n      tr.appendChild(th)\n      tableHead.appendChild(tr)\n    })\n\n    const tableBody = document.createElement('tbody')\n    tableBody.classList.add(ClassName.TOOLTIP_BODY)\n\n    bodyLines.forEach((body, i) => {\n      const colors = tooltip.labelColors[i]\n\n      const span = document.createElement('span')\n      span.style.background = colors.backgroundColor\n      span.style.borderColor = colors.borderColor\n      span.style.borderWidth = '2px'\n      span.style.marginRight = '10px'\n      span.style.height = '10px'\n      span.style.width = '10px'\n      span.style.display = 'inline-block'\n\n      const tr = document.createElement('tr')\n      tr.classList.add(ClassName.TOOLTIP_BODY_ITEM)\n\n      const td = document.createElement('td')\n      td.style.borderWidth = 0\n\n      const text = document.createTextNode(body)\n\n      td.appendChild(span)\n      td.appendChild(text)\n      tr.appendChild(td)\n      tableBody.appendChild(tr)\n    })\n\n    const tableRoot = tooltipEl.querySelector('table')\n\n    // Remove old children\n    while (tableRoot.firstChild) {\n      tableRoot.firstChild.remove()\n    }\n\n    // Add new children\n    tableRoot.appendChild(tableHead)\n    tableRoot.appendChild(tableBody)\n  }\n\n  const { offsetLeft: positionX, offsetTop: positionY } = chart.canvas\n\n  // Display, position, and set styles for font\n  tooltipEl.style.opacity = 1\n  tooltipEl.style.left = positionX + tooltip.caretX + 'px'\n  tooltipEl.style.top = positionY + tooltip.caretY + 'px'\n  tooltipEl.style.font = tooltip.options.bodyFont.string\n  tooltipEl.style.padding = tooltip.padding + 'px ' + tooltip.padding + 'px'\n}\n\nexport default customTooltips\n","/**\n * --------------------------------------------------------------------------\n * Custom Tooltips for Chart.js (v3.0.0): index.umd.js\n * Licensed under MIT (https://github.com/@coreui/coreui-chartjs/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n// eslint-disable-next-line no-unused-vars\nimport customTooltips from './src/custom-tooltips'\n\nexport default {\n  customTooltips\n}\n"]}